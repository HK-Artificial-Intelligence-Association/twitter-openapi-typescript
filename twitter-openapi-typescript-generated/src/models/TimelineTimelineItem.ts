/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypeName } from './TypeName';
import {
    TypeNameFromJSON,
    TypeNameFromJSONTyped,
    TypeNameToJSON,
    TypeNameToJSONTyped,
} from './TypeName';
import type { ItemContentUnion } from './ItemContentUnion';
import {
    ItemContentUnionFromJSON,
    ItemContentUnionFromJSONTyped,
    ItemContentUnionToJSON,
    ItemContentUnionToJSONTyped,
} from './ItemContentUnion';
import type { ClientEventInfo } from './ClientEventInfo';
import {
    ClientEventInfoFromJSON,
    ClientEventInfoFromJSONTyped,
    ClientEventInfoToJSON,
    ClientEventInfoToJSONTyped,
} from './ClientEventInfo';
import type { ContentEntryType } from './ContentEntryType';
import {
    ContentEntryTypeFromJSON,
    ContentEntryTypeFromJSONTyped,
    ContentEntryTypeToJSON,
    ContentEntryTypeToJSONTyped,
} from './ContentEntryType';

/**
 * 
 * @export
 * @interface TimelineTimelineItem
 */
export interface TimelineTimelineItem {
    /**
     * 
     * @type {TypeName}
     * @memberof TimelineTimelineItem
     */
    typename: TypeName;
    /**
     * 
     * @type {ClientEventInfo}
     * @memberof TimelineTimelineItem
     */
    clientEventInfo?: ClientEventInfo;
    /**
     * 
     * @type {ContentEntryType}
     * @memberof TimelineTimelineItem
     */
    entryType: ContentEntryType;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof TimelineTimelineItem
     */
    feedbackInfo?: { [key: string]: any; };
    /**
     * 
     * @type {ItemContentUnion}
     * @memberof TimelineTimelineItem
     */
    itemContent: ItemContentUnion;
}



/**
 * Check if a given object implements the TimelineTimelineItem interface.
 */
export function instanceOfTimelineTimelineItem(value: object): value is TimelineTimelineItem {
    if (!('typename' in value) || value['typename'] === undefined) return false;
    if (!('entryType' in value) || value['entryType'] === undefined) return false;
    if (!('itemContent' in value) || value['itemContent'] === undefined) return false;
    return true;
}

export function TimelineTimelineItemFromJSON(json: any): TimelineTimelineItem {
    return TimelineTimelineItemFromJSONTyped(json, false);
}

export function TimelineTimelineItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimelineTimelineItem {
    if (json == null) {
        return json;
    }
    return {
        
        'typename': TypeNameFromJSON(json['__typename']),
        'clientEventInfo': json['clientEventInfo'] == null ? undefined : ClientEventInfoFromJSON(json['clientEventInfo']),
        'entryType': ContentEntryTypeFromJSON(json['entryType']),
        'feedbackInfo': json['feedbackInfo'] == null ? undefined : json['feedbackInfo'],
        'itemContent': ItemContentUnionFromJSON(json['itemContent']),
    };
}

export function TimelineTimelineItemToJSON(json: any): TimelineTimelineItem {
    return TimelineTimelineItemToJSONTyped(json, false);
}

export function TimelineTimelineItemToJSONTyped(value?: TimelineTimelineItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '__typename': TypeNameToJSON(value['typename']),
        'clientEventInfo': ClientEventInfoToJSON(value['clientEventInfo']),
        'entryType': ContentEntryTypeToJSON(value['entryType']),
        'feedbackInfo': value['feedbackInfo'],
        'itemContent': ItemContentUnionToJSON(value['itemContent']),
    };
}

