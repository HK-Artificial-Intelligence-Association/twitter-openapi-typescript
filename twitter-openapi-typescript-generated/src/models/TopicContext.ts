/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TopicContext
 */
export interface TopicContext {
    /**
     * 
     * @type {string}
     * @memberof TopicContext
     */
    description?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TopicContext
     */
    following?: boolean;
    /**
     * 
     * @type {string}
     * @memberof TopicContext
     */
    iconUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof TopicContext
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof TopicContext
     */
    name?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TopicContext
     */
    notInterested?: boolean;
    /**
     * 
     * @type {string}
     * @memberof TopicContext
     */
    topicId?: string;
}

/**
 * Check if a given object implements the TopicContext interface.
 */
export function instanceOfTopicContext(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TopicContextFromJSON(json: any): TopicContext {
    return TopicContextFromJSONTyped(json, false);
}

export function TopicContextFromJSONTyped(json: any, ignoreDiscriminator: boolean): TopicContext {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'following': !exists(json, 'following') ? undefined : json['following'],
        'iconUrl': !exists(json, 'icon_url') ? undefined : json['icon_url'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'notInterested': !exists(json, 'not_interested') ? undefined : json['not_interested'],
        'topicId': !exists(json, 'topic_id') ? undefined : json['topic_id'],
    };
}

export function TopicContextToJSON(value?: TopicContext | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'following': value.following,
        'icon_url': value.iconUrl,
        'id': value.id,
        'name': value.name,
        'not_interested': value.notInterested,
        'topic_id': value.topicId,
    };
}

