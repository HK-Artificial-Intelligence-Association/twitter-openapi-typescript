/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserVerificationInfoReasonDescriptionEntities } from './UserVerificationInfoReasonDescriptionEntities';
import {
    UserVerificationInfoReasonDescriptionEntitiesFromJSON,
    UserVerificationInfoReasonDescriptionEntitiesFromJSONTyped,
    UserVerificationInfoReasonDescriptionEntitiesToJSON,
} from './UserVerificationInfoReasonDescriptionEntities';

/**
 * 
 * @export
 * @interface UserVerificationInfoReasonDescription
 */
export interface UserVerificationInfoReasonDescription {
    /**
     * 
     * @type {Array<UserVerificationInfoReasonDescriptionEntities>}
     * @memberof UserVerificationInfoReasonDescription
     */
    entities: Array<UserVerificationInfoReasonDescriptionEntities>;
    /**
     * 
     * @type {string}
     * @memberof UserVerificationInfoReasonDescription
     */
    text: string;
}

/**
 * Check if a given object implements the UserVerificationInfoReasonDescription interface.
 */
export function instanceOfUserVerificationInfoReasonDescription(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "entities" in value;
    isInstance = isInstance && "text" in value;

    return isInstance;
}

export function UserVerificationInfoReasonDescriptionFromJSON(json: any): UserVerificationInfoReasonDescription {
    return UserVerificationInfoReasonDescriptionFromJSONTyped(json, false);
}

export function UserVerificationInfoReasonDescriptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserVerificationInfoReasonDescription {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'entities': ((json['entities'] as Array<any>).map(UserVerificationInfoReasonDescriptionEntitiesFromJSON)),
        'text': json['text'],
    };
}

export function UserVerificationInfoReasonDescriptionToJSON(value?: UserVerificationInfoReasonDescription | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'entities': ((value.entities as Array<any>).map(UserVerificationInfoReasonDescriptionEntitiesToJSON)),
        'text': value.text,
    };
}

