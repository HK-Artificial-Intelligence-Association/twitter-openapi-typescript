/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MediaOriginalInfoFocusRect } from './MediaOriginalInfoFocusRect';
import {
    MediaOriginalInfoFocusRectFromJSON,
    MediaOriginalInfoFocusRectFromJSONTyped,
    MediaOriginalInfoFocusRectToJSON,
} from './MediaOriginalInfoFocusRect';

/**
 * 
 * @export
 * @interface MediaOriginalInfo
 */
export interface MediaOriginalInfo {
    /**
     * 
     * @type {Array<MediaOriginalInfoFocusRect>}
     * @memberof MediaOriginalInfo
     */
    focusRects?: Array<MediaOriginalInfoFocusRect>;
    /**
     * 
     * @type {number}
     * @memberof MediaOriginalInfo
     */
    height: number;
    /**
     * 
     * @type {number}
     * @memberof MediaOriginalInfo
     */
    width: number;
}

/**
 * Check if a given object implements the MediaOriginalInfo interface.
 */
export function instanceOfMediaOriginalInfo(value: object): boolean {
    if (!('height' in value)) return false;
    if (!('width' in value)) return false;
    return true;
}

export function MediaOriginalInfoFromJSON(json: any): MediaOriginalInfo {
    return MediaOriginalInfoFromJSONTyped(json, false);
}

export function MediaOriginalInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaOriginalInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'focusRects': json['focus_rects'] == null ? undefined : ((json['focus_rects'] as Array<any>).map(MediaOriginalInfoFocusRectFromJSON)),
        'height': json['height'],
        'width': json['width'],
    };
}

export function MediaOriginalInfoToJSON(value?: MediaOriginalInfo | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'focus_rects': value['focusRects'] == null ? undefined : ((value['focusRects'] as Array<any>).map(MediaOriginalInfoFocusRectToJSON)),
        'height': value['height'],
        'width': value['width'],
    };
}

