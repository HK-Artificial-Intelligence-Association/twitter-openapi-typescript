/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MediaOriginalInfo
 */
export interface MediaOriginalInfo {
    /**
     * 
     * @type {Array<{ [key: string]: any; }>}
     * @memberof MediaOriginalInfo
     */
    focusRects?: Array<{ [key: string]: any; }>;
    /**
     * 
     * @type {number}
     * @memberof MediaOriginalInfo
     */
    height?: number;
    /**
     * 
     * @type {number}
     * @memberof MediaOriginalInfo
     */
    width?: number;
}

/**
 * Check if a given object implements the MediaOriginalInfo interface.
 */
export function instanceOfMediaOriginalInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MediaOriginalInfoFromJSON(json: any): MediaOriginalInfo {
    return MediaOriginalInfoFromJSONTyped(json, false);
}

export function MediaOriginalInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaOriginalInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'focusRects': !exists(json, 'focus_rects') ? undefined : json['focus_rects'],
        'height': !exists(json, 'height') ? undefined : json['height'],
        'width': !exists(json, 'width') ? undefined : json['width'],
    };
}

export function MediaOriginalInfoToJSON(value?: MediaOriginalInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'focus_rects': value.focusRects,
        'height': value.height,
        'width': value.width,
    };
}

