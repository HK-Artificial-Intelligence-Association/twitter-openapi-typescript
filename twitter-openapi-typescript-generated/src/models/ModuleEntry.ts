/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ItemContentUnion } from './ItemContentUnion';
import {
    ItemContentUnionFromJSON,
    ItemContentUnionFromJSONTyped,
    ItemContentUnionToJSON,
} from './ItemContentUnion';
import type { ClientEventInfo } from './ClientEventInfo';
import {
    ClientEventInfoFromJSON,
    ClientEventInfoFromJSONTyped,
    ClientEventInfoToJSON,
} from './ClientEventInfo';
import type { FeedbackInfo } from './FeedbackInfo';
import {
    FeedbackInfoFromJSON,
    FeedbackInfoFromJSONTyped,
    FeedbackInfoToJSON,
} from './FeedbackInfo';

/**
 * 
 * @export
 * @interface ModuleEntry
 */
export interface ModuleEntry {
    /**
     * 
     * @type {ClientEventInfo}
     * @memberof ModuleEntry
     */
    clientEventInfo?: ClientEventInfo;
    /**
     * 
     * @type {FeedbackInfo}
     * @memberof ModuleEntry
     */
    feedbackInfo?: FeedbackInfo;
    /**
     * 
     * @type {ItemContentUnion}
     * @memberof ModuleEntry
     */
    itemContent: ItemContentUnion;
}

/**
 * Check if a given object implements the ModuleEntry interface.
 */
export function instanceOfModuleEntry(value: object): value is ModuleEntry {
    if (!('itemContent' in value) || value['itemContent'] === undefined) return false;
    return true;
}

export function ModuleEntryFromJSON(json: any): ModuleEntry {
    return ModuleEntryFromJSONTyped(json, false);
}

export function ModuleEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModuleEntry {
    if (json == null) {
        return json;
    }
    return {
        
        'clientEventInfo': json['clientEventInfo'] == null ? undefined : ClientEventInfoFromJSON(json['clientEventInfo']),
        'feedbackInfo': json['feedbackInfo'] == null ? undefined : FeedbackInfoFromJSON(json['feedbackInfo']),
        'itemContent': ItemContentUnionFromJSON(json['itemContent']),
    };
}

export function ModuleEntryToJSON(value?: ModuleEntry | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'clientEventInfo': ClientEventInfoToJSON(value['clientEventInfo']),
        'feedbackInfo': FeedbackInfoToJSON(value['feedbackInfo']),
        'itemContent': ItemContentUnionToJSON(value['itemContent']),
    };
}

