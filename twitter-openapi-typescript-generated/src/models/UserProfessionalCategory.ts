/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserProfessionalCategory
 */
export interface UserProfessionalCategory {
    /**
     * 
     * @type {string}
     * @memberof UserProfessionalCategory
     */
    iconName: string;
    /**
     * 
     * @type {number}
     * @memberof UserProfessionalCategory
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof UserProfessionalCategory
     */
    name: string;
}

/**
 * Check if a given object implements the UserProfessionalCategory interface.
 */
export function instanceOfUserProfessionalCategory(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "iconName" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function UserProfessionalCategoryFromJSON(json: any): UserProfessionalCategory {
    return UserProfessionalCategoryFromJSONTyped(json, false);
}

export function UserProfessionalCategoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProfessionalCategory {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'iconName': json['icon_name'],
        'id': json['id'],
        'name': json['name'],
    };
}

export function UserProfessionalCategoryToJSON(value?: UserProfessionalCategory | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'icon_name': value.iconName,
        'id': value.id,
        'name': value.name,
    };
}

