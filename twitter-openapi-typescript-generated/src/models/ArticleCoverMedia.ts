/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ArticleCoverMediaInfo } from './ArticleCoverMediaInfo';
import {
    ArticleCoverMediaInfoFromJSON,
    ArticleCoverMediaInfoFromJSONTyped,
    ArticleCoverMediaInfoToJSON,
} from './ArticleCoverMediaInfo';

/**
 * 
 * @export
 * @interface ArticleCoverMedia
 */
export interface ArticleCoverMedia {
    /**
     * 
     * @type {string}
     * @memberof ArticleCoverMedia
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ArticleCoverMedia
     */
    mediaId: string;
    /**
     * 
     * @type {ArticleCoverMediaInfo}
     * @memberof ArticleCoverMedia
     */
    mediaInfo: ArticleCoverMediaInfo;
    /**
     * 
     * @type {string}
     * @memberof ArticleCoverMedia
     */
    mediaKey: string;
}

/**
 * Check if a given object implements the ArticleCoverMedia interface.
 */
export function instanceOfArticleCoverMedia(value: object): value is ArticleCoverMedia {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('mediaId' in value) || value['mediaId'] === undefined) return false;
    if (!('mediaInfo' in value) || value['mediaInfo'] === undefined) return false;
    if (!('mediaKey' in value) || value['mediaKey'] === undefined) return false;
    return true;
}

export function ArticleCoverMediaFromJSON(json: any): ArticleCoverMedia {
    return ArticleCoverMediaFromJSONTyped(json, false);
}

export function ArticleCoverMediaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ArticleCoverMedia {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'mediaId': json['media_id'],
        'mediaInfo': ArticleCoverMediaInfoFromJSON(json['media_info']),
        'mediaKey': json['media_key'],
    };
}

export function ArticleCoverMediaToJSON(value?: ArticleCoverMedia | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'media_id': value['mediaId'],
        'media_info': ArticleCoverMediaInfoToJSON(value['mediaInfo']),
        'media_key': value['mediaKey'],
    };
}

