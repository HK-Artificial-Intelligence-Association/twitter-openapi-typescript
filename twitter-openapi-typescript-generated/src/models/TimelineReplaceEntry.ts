/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { InstructionType } from './InstructionType';
import {
    InstructionTypeFromJSON,
    InstructionTypeFromJSONTyped,
    InstructionTypeToJSON,
    InstructionTypeToJSONTyped,
} from './InstructionType';
import type { TimelineAddEntry } from './TimelineAddEntry';
import {
    TimelineAddEntryFromJSON,
    TimelineAddEntryFromJSONTyped,
    TimelineAddEntryToJSON,
    TimelineAddEntryToJSONTyped,
} from './TimelineAddEntry';

/**
 * 
 * @export
 * @interface TimelineReplaceEntry
 */
export interface TimelineReplaceEntry {
    /**
     * 
     * @type {TimelineAddEntry}
     * @memberof TimelineReplaceEntry
     */
    entry: TimelineAddEntry;
    /**
     * 
     * @type {string}
     * @memberof TimelineReplaceEntry
     */
    entryIdToReplace: string;
    /**
     * 
     * @type {InstructionType}
     * @memberof TimelineReplaceEntry
     */
    type: InstructionType;
}



/**
 * Check if a given object implements the TimelineReplaceEntry interface.
 */
export function instanceOfTimelineReplaceEntry(value: object): value is TimelineReplaceEntry {
    if (!('entry' in value) || value['entry'] === undefined) return false;
    if (!('entryIdToReplace' in value) || value['entryIdToReplace'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function TimelineReplaceEntryFromJSON(json: any): TimelineReplaceEntry {
    return TimelineReplaceEntryFromJSONTyped(json, false);
}

export function TimelineReplaceEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimelineReplaceEntry {
    if (json == null) {
        return json;
    }
    return {
        
        'entry': TimelineAddEntryFromJSON(json['entry']),
        'entryIdToReplace': json['entry_id_to_replace'],
        'type': InstructionTypeFromJSON(json['type']),
    };
}

export function TimelineReplaceEntryToJSON(json: any): TimelineReplaceEntry {
    return TimelineReplaceEntryToJSONTyped(json, false);
}

export function TimelineReplaceEntryToJSONTyped(value?: TimelineReplaceEntry | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'entry': TimelineAddEntryToJSON(value['entry']),
        'entry_id_to_replace': value['entryIdToReplace'],
        'type': InstructionTypeToJSON(value['type']),
    };
}

