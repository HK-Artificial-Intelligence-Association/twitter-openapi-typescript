/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserLegacy
 */
export interface UserLegacy {
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    blockedBy?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    blocking?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    canDm?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    canMediaTag?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    createdAt: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    defaultProfile: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    defaultProfileImage: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    description: string;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof UserLegacy
     */
    entities: { [key: string]: any; };
    /**
     * 
     * @type {number}
     * @memberof UserLegacy
     */
    fastFollowersCount: number;
    /**
     * 
     * @type {number}
     * @memberof UserLegacy
     */
    favouritesCount: number;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    followRequestSent?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    followedBy?: boolean;
    /**
     * 
     * @type {number}
     * @memberof UserLegacy
     */
    followersCount: number;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    following?: boolean;
    /**
     * 
     * @type {number}
     * @memberof UserLegacy
     */
    friendsCount: number;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    hasCustomTimelines: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    isTranslator: boolean;
    /**
     * 
     * @type {number}
     * @memberof UserLegacy
     */
    listedCount: number;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    location: string;
    /**
     * 
     * @type {number}
     * @memberof UserLegacy
     */
    mediaCount: number;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    muting?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof UserLegacy
     */
    normalFollowersCount: number;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    notifications?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserLegacy
     */
    pinnedTweetIdsStr: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    possiblySensitive: boolean;
    /**
     * 
     * @type {object}
     * @memberof UserLegacy
     */
    profileBannerExtensions?: object;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    profileBannerUrl?: string;
    /**
     * 
     * @type {object}
     * @memberof UserLegacy
     */
    profileImageExtensions?: object;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    profileImageUrlHttps: string;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    profileInterstitialType: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    _protected?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    screenName: string;
    /**
     * 
     * @type {number}
     * @memberof UserLegacy
     */
    statusesCount: number;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    translatorType: string;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    url?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    verified: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserLegacy
     */
    verifiedType?: UserLegacyVerifiedTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof UserLegacy
     */
    wantRetweets?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserLegacy
     */
    withheldInCountries?: Array<string>;
}


/**
 * @export
 */
export const UserLegacyVerifiedTypeEnum = {
    Business: 'Business',
    Government: 'Government'
} as const;
export type UserLegacyVerifiedTypeEnum = typeof UserLegacyVerifiedTypeEnum[keyof typeof UserLegacyVerifiedTypeEnum];


/**
 * Check if a given object implements the UserLegacy interface.
 */
export function instanceOfUserLegacy(value: object): value is UserLegacy {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('defaultProfile' in value) || value['defaultProfile'] === undefined) return false;
    if (!('defaultProfileImage' in value) || value['defaultProfileImage'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('entities' in value) || value['entities'] === undefined) return false;
    if (!('fastFollowersCount' in value) || value['fastFollowersCount'] === undefined) return false;
    if (!('favouritesCount' in value) || value['favouritesCount'] === undefined) return false;
    if (!('followersCount' in value) || value['followersCount'] === undefined) return false;
    if (!('friendsCount' in value) || value['friendsCount'] === undefined) return false;
    if (!('hasCustomTimelines' in value) || value['hasCustomTimelines'] === undefined) return false;
    if (!('isTranslator' in value) || value['isTranslator'] === undefined) return false;
    if (!('listedCount' in value) || value['listedCount'] === undefined) return false;
    if (!('location' in value) || value['location'] === undefined) return false;
    if (!('mediaCount' in value) || value['mediaCount'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('normalFollowersCount' in value) || value['normalFollowersCount'] === undefined) return false;
    if (!('pinnedTweetIdsStr' in value) || value['pinnedTweetIdsStr'] === undefined) return false;
    if (!('possiblySensitive' in value) || value['possiblySensitive'] === undefined) return false;
    if (!('profileImageUrlHttps' in value) || value['profileImageUrlHttps'] === undefined) return false;
    if (!('profileInterstitialType' in value) || value['profileInterstitialType'] === undefined) return false;
    if (!('screenName' in value) || value['screenName'] === undefined) return false;
    if (!('statusesCount' in value) || value['statusesCount'] === undefined) return false;
    if (!('translatorType' in value) || value['translatorType'] === undefined) return false;
    if (!('verified' in value) || value['verified'] === undefined) return false;
    return true;
}

export function UserLegacyFromJSON(json: any): UserLegacy {
    return UserLegacyFromJSONTyped(json, false);
}

export function UserLegacyFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserLegacy {
    if (json == null) {
        return json;
    }
    return {
        
        'blockedBy': json['blocked_by'] == null ? undefined : json['blocked_by'],
        'blocking': json['blocking'] == null ? undefined : json['blocking'],
        'canDm': json['can_dm'] == null ? undefined : json['can_dm'],
        'canMediaTag': json['can_media_tag'] == null ? undefined : json['can_media_tag'],
        'createdAt': json['created_at'],
        'defaultProfile': json['default_profile'],
        'defaultProfileImage': json['default_profile_image'],
        'description': json['description'],
        'entities': json['entities'],
        'fastFollowersCount': json['fast_followers_count'],
        'favouritesCount': json['favourites_count'],
        'followRequestSent': json['follow_request_sent'] == null ? undefined : json['follow_request_sent'],
        'followedBy': json['followed_by'] == null ? undefined : json['followed_by'],
        'followersCount': json['followers_count'],
        'following': json['following'] == null ? undefined : json['following'],
        'friendsCount': json['friends_count'],
        'hasCustomTimelines': json['has_custom_timelines'],
        'isTranslator': json['is_translator'],
        'listedCount': json['listed_count'],
        'location': json['location'],
        'mediaCount': json['media_count'],
        'muting': json['muting'] == null ? undefined : json['muting'],
        'name': json['name'],
        'normalFollowersCount': json['normal_followers_count'],
        'notifications': json['notifications'] == null ? undefined : json['notifications'],
        'pinnedTweetIdsStr': json['pinned_tweet_ids_str'],
        'possiblySensitive': json['possibly_sensitive'],
        'profileBannerExtensions': json['profile_banner_extensions'] == null ? undefined : json['profile_banner_extensions'],
        'profileBannerUrl': json['profile_banner_url'] == null ? undefined : json['profile_banner_url'],
        'profileImageExtensions': json['profile_image_extensions'] == null ? undefined : json['profile_image_extensions'],
        'profileImageUrlHttps': json['profile_image_url_https'],
        'profileInterstitialType': json['profile_interstitial_type'],
        '_protected': json['protected'] == null ? undefined : json['protected'],
        'screenName': json['screen_name'],
        'statusesCount': json['statuses_count'],
        'translatorType': json['translator_type'],
        'url': json['url'] == null ? undefined : json['url'],
        'verified': json['verified'],
        'verifiedType': json['verified_type'] == null ? undefined : json['verified_type'],
        'wantRetweets': json['want_retweets'] == null ? undefined : json['want_retweets'],
        'withheldInCountries': json['withheld_in_countries'] == null ? undefined : json['withheld_in_countries'],
    };
}

export function UserLegacyToJSON(json: any): UserLegacy {
    return UserLegacyToJSONTyped(json, false);
}

export function UserLegacyToJSONTyped(value?: UserLegacy | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'blocked_by': value['blockedBy'],
        'blocking': value['blocking'],
        'can_dm': value['canDm'],
        'can_media_tag': value['canMediaTag'],
        'created_at': value['createdAt'],
        'default_profile': value['defaultProfile'],
        'default_profile_image': value['defaultProfileImage'],
        'description': value['description'],
        'entities': value['entities'],
        'fast_followers_count': value['fastFollowersCount'],
        'favourites_count': value['favouritesCount'],
        'follow_request_sent': value['followRequestSent'],
        'followed_by': value['followedBy'],
        'followers_count': value['followersCount'],
        'following': value['following'],
        'friends_count': value['friendsCount'],
        'has_custom_timelines': value['hasCustomTimelines'],
        'is_translator': value['isTranslator'],
        'listed_count': value['listedCount'],
        'location': value['location'],
        'media_count': value['mediaCount'],
        'muting': value['muting'],
        'name': value['name'],
        'normal_followers_count': value['normalFollowersCount'],
        'notifications': value['notifications'],
        'pinned_tweet_ids_str': value['pinnedTweetIdsStr'],
        'possibly_sensitive': value['possiblySensitive'],
        'profile_banner_extensions': value['profileBannerExtensions'],
        'profile_banner_url': value['profileBannerUrl'],
        'profile_image_extensions': value['profileImageExtensions'],
        'profile_image_url_https': value['profileImageUrlHttps'],
        'profile_interstitial_type': value['profileInterstitialType'],
        'protected': value['_protected'],
        'screen_name': value['screenName'],
        'statuses_count': value['statusesCount'],
        'translator_type': value['translatorType'],
        'url': value['url'],
        'verified': value['verified'],
        'verified_type': value['verifiedType'],
        'want_retweets': value['wantRetweets'],
        'withheld_in_countries': value['withheldInCountries'],
    };
}

