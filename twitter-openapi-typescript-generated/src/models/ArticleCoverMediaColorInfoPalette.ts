/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ArticleCoverMediaColorInfoPaletteRGB } from './ArticleCoverMediaColorInfoPaletteRGB';
import {
    ArticleCoverMediaColorInfoPaletteRGBFromJSON,
    ArticleCoverMediaColorInfoPaletteRGBFromJSONTyped,
    ArticleCoverMediaColorInfoPaletteRGBToJSON,
} from './ArticleCoverMediaColorInfoPaletteRGB';

/**
 * 
 * @export
 * @interface ArticleCoverMediaColorInfoPalette
 */
export interface ArticleCoverMediaColorInfoPalette {
    /**
     * 
     * @type {number}
     * @memberof ArticleCoverMediaColorInfoPalette
     */
    percentage: number;
    /**
     * 
     * @type {ArticleCoverMediaColorInfoPaletteRGB}
     * @memberof ArticleCoverMediaColorInfoPalette
     */
    rgb: ArticleCoverMediaColorInfoPaletteRGB;
}

/**
 * Check if a given object implements the ArticleCoverMediaColorInfoPalette interface.
 */
export function instanceOfArticleCoverMediaColorInfoPalette(value: object): value is ArticleCoverMediaColorInfoPalette {
    if (!('percentage' in value) || value['percentage'] === undefined) return false;
    if (!('rgb' in value) || value['rgb'] === undefined) return false;
    return true;
}

export function ArticleCoverMediaColorInfoPaletteFromJSON(json: any): ArticleCoverMediaColorInfoPalette {
    return ArticleCoverMediaColorInfoPaletteFromJSONTyped(json, false);
}

export function ArticleCoverMediaColorInfoPaletteFromJSONTyped(json: any, ignoreDiscriminator: boolean): ArticleCoverMediaColorInfoPalette {
    if (json == null) {
        return json;
    }
    return {
        
        'percentage': json['percentage'],
        'rgb': ArticleCoverMediaColorInfoPaletteRGBFromJSON(json['rgb']),
    };
}

export function ArticleCoverMediaColorInfoPaletteToJSON(value?: ArticleCoverMediaColorInfoPalette | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'percentage': value['percentage'],
        'rgb': ArticleCoverMediaColorInfoPaletteRGBToJSON(value['rgb']),
    };
}

