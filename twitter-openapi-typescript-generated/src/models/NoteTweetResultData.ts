/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NoteTweetResultMedia } from './NoteTweetResultMedia';
import {
    NoteTweetResultMediaFromJSON,
    NoteTweetResultMediaFromJSONTyped,
    NoteTweetResultMediaToJSON,
} from './NoteTweetResultMedia';
import type { NoteTweetResultRichText } from './NoteTweetResultRichText';
import {
    NoteTweetResultRichTextFromJSON,
    NoteTweetResultRichTextFromJSONTyped,
    NoteTweetResultRichTextToJSON,
} from './NoteTweetResultRichText';
import type { Entities } from './Entities';
import {
    EntitiesFromJSON,
    EntitiesFromJSONTyped,
    EntitiesToJSON,
} from './Entities';

/**
 * 
 * @export
 * @interface NoteTweetResultData
 */
export interface NoteTweetResultData {
    /**
     * 
     * @type {Entities}
     * @memberof NoteTweetResultData
     */
    entitySet: Entities;
    /**
     * 
     * @type {string}
     * @memberof NoteTweetResultData
     */
    id: string;
    /**
     * 
     * @type {NoteTweetResultMedia}
     * @memberof NoteTweetResultData
     */
    media?: NoteTweetResultMedia;
    /**
     * 
     * @type {NoteTweetResultRichText}
     * @memberof NoteTweetResultData
     */
    richtext?: NoteTweetResultRichText;
    /**
     * 
     * @type {string}
     * @memberof NoteTweetResultData
     */
    text: string;
}

/**
 * Check if a given object implements the NoteTweetResultData interface.
 */
export function instanceOfNoteTweetResultData(value: object): value is NoteTweetResultData {
    if (!('entitySet' in value) || value['entitySet'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('text' in value) || value['text'] === undefined) return false;
    return true;
}

export function NoteTweetResultDataFromJSON(json: any): NoteTweetResultData {
    return NoteTweetResultDataFromJSONTyped(json, false);
}

export function NoteTweetResultDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): NoteTweetResultData {
    if (json == null) {
        return json;
    }
    return {
        
        'entitySet': EntitiesFromJSON(json['entity_set']),
        'id': json['id'],
        'media': json['media'] == null ? undefined : NoteTweetResultMediaFromJSON(json['media']),
        'richtext': json['richtext'] == null ? undefined : NoteTweetResultRichTextFromJSON(json['richtext']),
        'text': json['text'],
    };
}

export function NoteTweetResultDataToJSON(value?: NoteTweetResultData | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'entity_set': EntitiesToJSON(value['entitySet']),
        'id': value['id'],
        'media': NoteTweetResultMediaToJSON(value['media']),
        'richtext': NoteTweetResultRichTextToJSON(value['richtext']),
        'text': value['text'],
    };
}

