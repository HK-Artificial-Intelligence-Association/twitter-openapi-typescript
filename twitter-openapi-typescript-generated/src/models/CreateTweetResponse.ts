/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateTweetResponseData } from './CreateTweetResponseData';
import {
    CreateTweetResponseDataFromJSON,
    CreateTweetResponseDataFromJSONTyped,
    CreateTweetResponseDataToJSON,
    CreateTweetResponseDataToJSONTyped,
} from './CreateTweetResponseData';
import type { ErrorResponse } from './ErrorResponse';
import {
    ErrorResponseFromJSON,
    ErrorResponseFromJSONTyped,
    ErrorResponseToJSON,
    ErrorResponseToJSONTyped,
} from './ErrorResponse';

/**
 * 
 * @export
 * @interface CreateTweetResponse
 */
export interface CreateTweetResponse {
    /**
     * 
     * @type {CreateTweetResponseData}
     * @memberof CreateTweetResponse
     */
    data: CreateTweetResponseData;
    /**
     * 
     * @type {Array<ErrorResponse>}
     * @memberof CreateTweetResponse
     */
    errors?: Array<ErrorResponse>;
}

/**
 * Check if a given object implements the CreateTweetResponse interface.
 */
export function instanceOfCreateTweetResponse(value: object): value is CreateTweetResponse {
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function CreateTweetResponseFromJSON(json: any): CreateTweetResponse {
    return CreateTweetResponseFromJSONTyped(json, false);
}

export function CreateTweetResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTweetResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'data': CreateTweetResponseDataFromJSON(json['data']),
        'errors': json['errors'] == null ? undefined : ((json['errors'] as Array<any>).map(ErrorResponseFromJSON)),
    };
}

export function CreateTweetResponseToJSON(json: any): CreateTweetResponse {
    return CreateTweetResponseToJSONTyped(json, false);
}

export function CreateTweetResponseToJSONTyped(value?: CreateTweetResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': CreateTweetResponseDataToJSON(value['data']),
        'errors': value['errors'] == null ? undefined : ((value['errors'] as Array<any>).map(ErrorResponseToJSON)),
    };
}

