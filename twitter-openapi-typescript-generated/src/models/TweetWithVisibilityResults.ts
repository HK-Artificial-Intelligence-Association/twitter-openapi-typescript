/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypeName } from './TypeName';
import {
    TypeNameFromJSON,
    TypeNameFromJSONTyped,
    TypeNameToJSON,
    TypeNameToJSONTyped,
} from './TypeName';
import type { MediaVisibilityResults } from './MediaVisibilityResults';
import {
    MediaVisibilityResultsFromJSON,
    MediaVisibilityResultsFromJSONTyped,
    MediaVisibilityResultsToJSON,
    MediaVisibilityResultsToJSONTyped,
} from './MediaVisibilityResults';
import type { Tweet } from './Tweet';
import {
    TweetFromJSON,
    TweetFromJSONTyped,
    TweetToJSON,
    TweetToJSONTyped,
} from './Tweet';
import type { TweetInterstitial } from './TweetInterstitial';
import {
    TweetInterstitialFromJSON,
    TweetInterstitialFromJSONTyped,
    TweetInterstitialToJSON,
    TweetInterstitialToJSONTyped,
} from './TweetInterstitial';

/**
 * 
 * @export
 * @interface TweetWithVisibilityResults
 */
export interface TweetWithVisibilityResults {
    /**
     * 
     * @type {TypeName}
     * @memberof TweetWithVisibilityResults
     */
    typename: TypeName;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof TweetWithVisibilityResults
     */
    limitedActionResults?: { [key: string]: any; };
    /**
     * 
     * @type {MediaVisibilityResults}
     * @memberof TweetWithVisibilityResults
     */
    mediaVisibilityResults?: MediaVisibilityResults;
    /**
     * 
     * @type {Tweet}
     * @memberof TweetWithVisibilityResults
     */
    tweet: Tweet;
    /**
     * 
     * @type {TweetInterstitial}
     * @memberof TweetWithVisibilityResults
     */
    tweetInterstitial?: TweetInterstitial;
}



/**
 * Check if a given object implements the TweetWithVisibilityResults interface.
 */
export function instanceOfTweetWithVisibilityResults(value: object): value is TweetWithVisibilityResults {
    if (!('typename' in value) || value['typename'] === undefined) return false;
    if (!('tweet' in value) || value['tweet'] === undefined) return false;
    return true;
}

export function TweetWithVisibilityResultsFromJSON(json: any): TweetWithVisibilityResults {
    return TweetWithVisibilityResultsFromJSONTyped(json, false);
}

export function TweetWithVisibilityResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TweetWithVisibilityResults {
    if (json == null) {
        return json;
    }
    return {
        
        'typename': TypeNameFromJSON(json['__typename']),
        'limitedActionResults': json['limitedActionResults'] == null ? undefined : json['limitedActionResults'],
        'mediaVisibilityResults': json['mediaVisibilityResults'] == null ? undefined : MediaVisibilityResultsFromJSON(json['mediaVisibilityResults']),
        'tweet': TweetFromJSON(json['tweet']),
        'tweetInterstitial': json['tweetInterstitial'] == null ? undefined : TweetInterstitialFromJSON(json['tweetInterstitial']),
    };
}

export function TweetWithVisibilityResultsToJSON(json: any): TweetWithVisibilityResults {
    return TweetWithVisibilityResultsToJSONTyped(json, false);
}

export function TweetWithVisibilityResultsToJSONTyped(value?: TweetWithVisibilityResults | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '__typename': TypeNameToJSON(value['typename']),
        'limitedActionResults': value['limitedActionResults'],
        'mediaVisibilityResults': MediaVisibilityResultsToJSON(value['mediaVisibilityResults']),
        'tweet': TweetToJSON(value['tweet']),
        'tweetInterstitial': TweetInterstitialToJSON(value['tweetInterstitial']),
    };
}

