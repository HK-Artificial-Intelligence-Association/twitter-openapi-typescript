/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TimelineCoverBehaviorUrl } from './TimelineCoverBehaviorUrl';
import {
    TimelineCoverBehaviorUrlFromJSON,
    TimelineCoverBehaviorUrlFromJSONTyped,
    TimelineCoverBehaviorUrlToJSON,
    TimelineCoverBehaviorUrlToJSONTyped,
} from './TimelineCoverBehaviorUrl';

/**
 * 
 * @export
 * @interface TimelineCoverBehavior
 */
export interface TimelineCoverBehavior {
    /**
     * 
     * @type {string}
     * @memberof TimelineCoverBehavior
     */
    type: TimelineCoverBehaviorTypeEnum;
    /**
     * 
     * @type {TimelineCoverBehaviorUrl}
     * @memberof TimelineCoverBehavior
     */
    url?: TimelineCoverBehaviorUrl;
}


/**
 * @export
 */
export const TimelineCoverBehaviorTypeEnum = {
    TimelineCoverBehaviorDismiss: 'TimelineCoverBehaviorDismiss',
    TimelineCoverBehaviorNavigate: 'TimelineCoverBehaviorNavigate'
} as const;
export type TimelineCoverBehaviorTypeEnum = typeof TimelineCoverBehaviorTypeEnum[keyof typeof TimelineCoverBehaviorTypeEnum];


/**
 * Check if a given object implements the TimelineCoverBehavior interface.
 */
export function instanceOfTimelineCoverBehavior(value: object): value is TimelineCoverBehavior {
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function TimelineCoverBehaviorFromJSON(json: any): TimelineCoverBehavior {
    return TimelineCoverBehaviorFromJSONTyped(json, false);
}

export function TimelineCoverBehaviorFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimelineCoverBehavior {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'url': json['url'] == null ? undefined : TimelineCoverBehaviorUrlFromJSON(json['url']),
    };
}

export function TimelineCoverBehaviorToJSON(json: any): TimelineCoverBehavior {
    return TimelineCoverBehaviorToJSONTyped(json, false);
}

export function TimelineCoverBehaviorToJSONTyped(value?: TimelineCoverBehavior | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'url': TimelineCoverBehaviorUrlToJSON(value['url']),
    };
}

