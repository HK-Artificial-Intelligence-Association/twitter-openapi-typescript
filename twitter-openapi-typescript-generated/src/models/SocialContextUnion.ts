/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { TimelineGeneralContext } from './TimelineGeneralContext';
import {
    instanceOfTimelineGeneralContext,
    TimelineGeneralContextFromJSON,
    TimelineGeneralContextFromJSONTyped,
    TimelineGeneralContextToJSON,
} from './TimelineGeneralContext';
import type { TimelineTopicContext } from './TimelineTopicContext';
import {
    instanceOfTimelineTopicContext,
    TimelineTopicContextFromJSON,
    TimelineTopicContextFromJSONTyped,
    TimelineTopicContextToJSON,
} from './TimelineTopicContext';

/**
 * @type SocialContextUnion
 * 
 * @export
 */
export type SocialContextUnion = { type: 'TimelineGeneralContext' } & TimelineGeneralContext | { type: 'TimelineTopicContext' } & TimelineTopicContext;

export function SocialContextUnionFromJSON(json: any): SocialContextUnion {
    return SocialContextUnionFromJSONTyped(json, false);
}

export function SocialContextUnionFromJSONTyped(json: any, ignoreDiscriminator: boolean): SocialContextUnion {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'TimelineGeneralContext':
            return {...TimelineGeneralContextFromJSONTyped(json, true), type: 'TimelineGeneralContext'};
        case 'TimelineTopicContext':
            return {...TimelineTopicContextFromJSONTyped(json, true), type: 'TimelineTopicContext'};
        default:
            throw new Error(`No variant of SocialContextUnion exists with 'type=${json['type']}'`);
    }
}

export function SocialContextUnionToJSON(value?: SocialContextUnion | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'TimelineGeneralContext':
            return TimelineGeneralContextToJSON(value);
        case 'TimelineTopicContext':
            return TimelineTopicContextToJSON(value);
        default:
            throw new Error(`No variant of SocialContextUnion exists with 'type=${value['type']}'`);
    }

}

